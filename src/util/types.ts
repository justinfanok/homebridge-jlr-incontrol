export interface VehicleStatusResponse {
  vehicleStatus: KeyValuePair[];
}

type KeyValuePair = {
  key: string;
  value: string;
};

export interface VehicleStatus {
  BRAKE_FLUID_WARN: string;
  BRAZIL_EVENT_MODE: string;
  CLIMATE_STATUS_FFH_REMAINING_RUNTIME: number;
  CLIMATE_STATUS_OPERATING_STATUS: string;
  CLIMATE_STATUS_REMAINING_RUNTIME: number;
  CLIMATE_STATUS_TIMER_ACTIVATION_STATUS: boolean;
  CLIMATE_STATUS_TIMER1_DAY: number;
  CLIMATE_STATUS_TIMER1_HOUR: number;
  CLIMATE_STATUS_TIMER1_MINUTE: number;
  CLIMATE_STATUS_TIMER1_MONTH: number;
  CLIMATE_STATUS_TIMER2_DAY: number;
  CLIMATE_STATUS_TIMER2_HOUR: number;
  CLIMATE_STATUS_TIMER2_MINUTE: number;
  CLIMATE_STATUS_TIMER2_MONTH: number;
  CLIMATE_STATUS_VENTING_TIME: number;
  DISTANCE_TO_EMPTY_FUEL: number;
  DOOR_BOOT_LOCK_STATUS: "LOCKED" | "UNLOCKED";
  DOOR_BOOT_POSITION: "OPEN" | "CLOSED";
  DOOR_ENGINE_HOOD_LOCK_STATUS: "LOCKED" | "UNLOCKED";
  DOOR_ENGINE_HOOD_POSITION: "OPEN" | "CLOSED";
  DOOR_FRONT_LEFT_LOCK_STATUS: "LOCKED" | "UNLOCKED";
  DOOR_FRONT_LEFT_POSITION: "OPEN" | "CLOSED";
  DOOR_FRONT_RIGHT_LOCK_STATUS: "LOCKED" | "UNLOCKED";
  DOOR_FRONT_RIGHT_POSITION: "OPEN" | "CLOSED";
  DOOR_IS_ALL_DOORS_LOCKED: "TRUE" | "FALSE";
  DOOR_IS_BOOT_LOCKED: boolean;
  DOOR_REAR_LEFT_LOCK_STATUS: "LOCKED" | "UNLOCKED";
  DOOR_REAR_LEFT_POSITION: "OPEN" | "CLOSED";
  DOOR_REAR_RIGHT_LOCK_STATUS: "LOCKED" | "UNLOCKED";
  DOOR_REAR_RIGHT_POSITION: "OPEN" | "CLOSED";
  DRV_SEAT_SECOND_ROW_INHIBITION: string;
  DRV_SEAT_SECOND_ROW_STATUS: string;
  DRV_SEAT_THIRD_ROW_INHIBITION: string;
  DRV_SEAT_THIRD_ROW_STATUS: string;
  ENG_COOLANT_LEVEL_WARN: string;
  ENGINE_BLOCK: string;
  ENGINE_COOLANT_TEMP: number;
  EXT_BULB_STATUS_LEFT_TURN_ANY: number;
  EXT_KILOMETERS_TO_SERVICE: number;
  EXT_OIL_LEVEL_WARN: string;
  FUEL_LEVEL_PERC: number;
  IS_CAB_OPEN: string;
  IS_CRASH_SITUATION: string;
  IS_HEAD_LIGHTS_ON: string;
  IS_PANIC_ALARM_TRIGGERED: string;
  IS_SUNROOF_OPEN: string;
  LATEST_COMPLETE_CONFIG_UPDATE: string;
  ODOMETER: number;
  ODOMETER_METER: number;
  ODOMETER_METER_RESOLUTION: string;
  ODOMETER_MILES: number;
  ODOMETER_MILES_RESOLUTION: string;
  PAS_SEAT_FIRST_ROW_INHIBITION: string;
  PAS_SEAT_FIRST_ROW_STATUS: string;
  PAS_SEAT_SECOND_ROW_INHIBITION: string;
  PAS_SEAT_SECOND_ROW_STATUS: string;
  PAS_SEAT_THIRD_ROW_INHIBITION: string;
  PAS_SEAT_THIRD_ROW_STATUS: string;
  PRIVACY_SWITCH: string;
  SERVICE_MODE_START: string;
  SERVICE_MODE_STOP: string;
  SRS_STATUS: string;
  THEFT_ALARM_STATUS: string;
  TRANSPORT_MODE_START: string;
  TRANSPORT_MODE_STOP: string;
  TU_ACTIVATION_STATUS: string;
  TU_STATUS_BUTTONS: string;
  TU_STATUS_CAN: string;
  TU_STATUS_CONFIG_VERSION: number;
  TU_STATUS_CRASH_INPUT: string;
  TU_STATUS_DAYS_SINCE_GNSS_FIX: number;
  TU_STATUS_EXT_HANDSFREE: string;
  TU_STATUS_EXT_POWER: string;
  TU_STATUS_GNSS: string;
  TU_STATUS_GNSS_ANTENNA: string;
  TU_STATUS_GSM_EXT_ANTENNA: string;
  TU_STATUS_GSM_MODEM: string;
  TU_STATUS_HANDSET: string;
  TU_STATUS_HW_VERSION: string;
  TU_STATUS_IMEI: number;
  TU_STATUS_INT_POWER: string;
  TU_STATUS_INT_RTC: string;
  TU_STATUS_MIC: string;
  TU_STATUS_MOBILE_PHONE_CONNECTED: string;
  TU_STATUS_POWER: string;
  TU_STATUS_PRIMARY_CHARGE_PERCENT: number;
  TU_STATUS_PRIMARY_VOLT: number;
  TU_STATUS_SECONDARY_VOLT: number;
  TU_STATUS_SERIAL_NUMBER: string;
  TU_STATUS_SLEEP_CYCLES_START_TIME: string;
  TU_STATUS_SPEAKER: string;
  TU_STATUS_SW_VERSION_CONFIG: string;
  TU_STATUS_SW_VERSION_MAIN: string;
  TU_STATUS_SW_VERSION_SECONDARY: string;
  TU_STATUS_USES_EXTERNAL_GNSS: string;
  TYRE_PRESSURE_FRONT_LEFT: number;
  TYRE_PRESSURE_FRONT_RIGHT: number;
  TYRE_PRESSURE_REAR_LEFT: number;
  TYRE_PRESSURE_REAR_RIGHT: number;
  TYRE_STATUS_FRONT_LEFT: string;
  TYRE_STATUS_FRONT_RIGHT: string;
  TYRE_STATUS_REAR_LEFT: string;
  TYRE_STATUS_REAR_RIGHT: string;
  VEHICLE_STATE_TYPE: string;
  WASHER_FLUID_WARN: string;
  WINDOW_FRONT_LEFT_STATUS: string;
  WINDOW_FRONT_RIGHT_STATUS: string;
  WINDOW_REAR_LEFT_STATUS: string;
  WINDOW_REAR_RIGHT_STATUS: string;
}

type VehicleService = {
  serviceType: string;
  vehicleCapable: boolean;
  serviceEnabled: boolean;
};

type VehicleCapability = {
  capability: string;
  capabilityClass: string;
};

export interface VehicleAttributes {
  engineCode: string;
  seatsQuantity: number;
  exteriorColorName: string;
  exteriorCode: string;
  interiorColorName: string;
  interiorCode: string;
  tyreDimensionCode: string;
  tyreInflationPressureLightCode: any;
  tyreInflationPressureHeavyCode: any;
  fuelType: any;
  fuelTankVolume: any;
  grossWeight: number;
  modelYear: number;
  constructionDate: any;
  deliveryDate: any;
  numberOfDoors: number;
  country: string;
  registrationNumber: string;
  carLocatorMapDistance: any;
  vehicleBrand: string;
  vehicleType: string;
  vehicleTypeCode: string;
  bodyType: string;
  gearboxCode: string;
  availableServices: VehicleService[];
  timeFullyAccessible: any;
  timePartiallyAccessible: any;
  subscriptionType: any;
  capabilities: VehicleCapability[];
  nickname: string;
  telematicsDevice: {
    serialNumber: string;
    imei: string;
  };
  deviceState: string;
  roofType: string;
}
